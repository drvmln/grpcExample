// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sqlquery.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PriceRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceRequest) Reset()         { *m = PriceRequest{} }
func (m *PriceRequest) String() string { return proto.CompactTextString(m) }
func (*PriceRequest) ProtoMessage()    {}
func (*PriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c1d79c6bf0f349c, []int{0}
}

func (m *PriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRequest.Unmarshal(m, b)
}
func (m *PriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRequest.Marshal(b, m, deterministic)
}
func (m *PriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRequest.Merge(m, src)
}
func (m *PriceRequest) XXX_Size() int {
	return xxx_messageInfo_PriceRequest.Size(m)
}
func (m *PriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRequest proto.InternalMessageInfo

func (m *PriceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PriceReply struct {
	MaketPrice           string   `protobuf:"bytes,1,opt,name=maketPrice,proto3" json:"maketPrice,omitempty"`
	BulkPrice            string   `protobuf:"bytes,2,opt,name=bulkPrice,proto3" json:"bulkPrice,omitempty"`
	Err                  string   `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceReply) Reset()         { *m = PriceReply{} }
func (m *PriceReply) String() string { return proto.CompactTextString(m) }
func (*PriceReply) ProtoMessage()    {}
func (*PriceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c1d79c6bf0f349c, []int{1}
}

func (m *PriceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceReply.Unmarshal(m, b)
}
func (m *PriceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceReply.Marshal(b, m, deterministic)
}
func (m *PriceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceReply.Merge(m, src)
}
func (m *PriceReply) XXX_Size() int {
	return xxx_messageInfo_PriceReply.Size(m)
}
func (m *PriceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceReply.DiscardUnknown(m)
}

var xxx_messageInfo_PriceReply proto.InternalMessageInfo

func (m *PriceReply) GetMaketPrice() string {
	if m != nil {
		return m.MaketPrice
	}
	return ""
}

func (m *PriceReply) GetBulkPrice() string {
	if m != nil {
		return m.BulkPrice
	}
	return ""
}

func (m *PriceReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*PriceRequest)(nil), "grpc.PriceRequest")
	proto.RegisterType((*PriceReply)(nil), "grpc.PriceReply")
}

func init() { proto.RegisterFile("sqlquery.proto", fileDescriptor_1c1d79c6bf0f349c) }

var fileDescriptor_1c1d79c6bf0f349c = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2e, 0xcc, 0x29,
	0x2c, 0x4d, 0x2d, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x2f, 0x2a, 0x48,
	0x56, 0x92, 0xe3, 0xe2, 0x09, 0x28, 0xca, 0x4c, 0x4e, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c,
	0x51, 0x8a, 0xe1, 0xe2, 0x82, 0xca, 0x17, 0xe4, 0x54, 0x0a, 0xc9, 0x71, 0x71, 0xe5, 0x26, 0x66,
	0xa7, 0x96, 0x80, 0x85, 0xa0, 0xaa, 0x90, 0x44, 0x84, 0x64, 0xb8, 0x38, 0x93, 0x4a, 0x73, 0xb2,
	0x21, 0xd2, 0x4c, 0x60, 0x69, 0x84, 0x80, 0x90, 0x00, 0x17, 0x73, 0x6a, 0x51, 0x91, 0x04, 0x33,
	0x58, 0x1c, 0xc4, 0x34, 0xf2, 0x87, 0xda, 0x1e, 0x9c, 0x5a, 0x54, 0x06, 0x52, 0x61, 0xcf, 0x25,
	0xea, 0x0e, 0x35, 0xcb, 0xad, 0x28, 0x3f, 0x17, 0xcc, 0xf0, 0xc9, 0x2c, 0x2e, 0x11, 0x12, 0xd2,
	0x03, 0xb9, 0x56, 0x0f, 0xd9, 0xa9, 0x52, 0x02, 0x28, 0x62, 0x05, 0x39, 0x95, 0x4a, 0x0c, 0x4e,
	0x06, 0x5c, 0xd2, 0x99, 0xf9, 0x10, 0xf1, 0xd4, 0x8a, 0xc4, 0xdc, 0x82, 0x9c, 0xd4, 0x62, 0xbd,
	0x8c, 0xd4, 0x9c, 0x9c, 0xfc, 0xf2, 0xfc, 0xa2, 0x9c, 0x14, 0x27, 0x7e, 0x0f, 0x10, 0x3b, 0x1c,
	0xc4, 0x0e, 0x00, 0x05, 0x42, 0x00, 0x63, 0x12, 0x1b, 0x38, 0x34, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x63, 0x5d, 0xb4, 0xbb, 0x1f, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PriceServiceClient is the client API for PriceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PriceServiceClient interface {
	GetPriceFromPriceList(ctx context.Context, in *PriceRequest, opts ...grpc.CallOption) (*PriceReply, error)
}

type priceServiceClient struct {
	cc *grpc.ClientConn
}

func NewPriceServiceClient(cc *grpc.ClientConn) PriceServiceClient {
	return &priceServiceClient{cc}
}

func (c *priceServiceClient) GetPriceFromPriceList(ctx context.Context, in *PriceRequest, opts ...grpc.CallOption) (*PriceReply, error) {
	out := new(PriceReply)
	err := c.cc.Invoke(ctx, "/grpc.PriceService/GetPriceFromPriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PriceServiceServer is the server API for PriceService service.
type PriceServiceServer interface {
	GetPriceFromPriceList(context.Context, *PriceRequest) (*PriceReply, error)
}

// UnimplementedPriceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPriceServiceServer struct {
}

func (*UnimplementedPriceServiceServer) GetPriceFromPriceList(ctx context.Context, req *PriceRequest) (*PriceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriceFromPriceList not implemented")
}

func RegisterPriceServiceServer(s *grpc.Server, srv PriceServiceServer) {
	s.RegisterService(&_PriceService_serviceDesc, srv)
}

func _PriceService_GetPriceFromPriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceServiceServer).GetPriceFromPriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.PriceService/GetPriceFromPriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceServiceServer).GetPriceFromPriceList(ctx, req.(*PriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PriceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.PriceService",
	HandlerType: (*PriceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPriceFromPriceList",
			Handler:    _PriceService_GetPriceFromPriceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sqlquery.proto",
}
